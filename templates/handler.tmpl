package handlers
{{/* Expects httpHandlerConfig */}}
import (
	"{{ GetModuleName }}/internal/models"
	{{ with .Service}}"{{ GetModuleName }}/internal/services"{{end}}
	"encoding/json"
	"net/http"
)
{{ $name := .Name}}
type {{ .Name }}Service interface { {{ with .Service}}
	{{ GetMethodSignatureByName . }}{{ end }}
}
type {{ .Name }} struct {
	{{with .Service}}service {{ $name }}Service{{end}}
}

func New{{ .Name }}({{ with .Service }}service *services.{{GetServiceClass .}}{{ end }}) *{{ .Name }} {
	return &{{ .Name }}{
		{{with .Service}}service: service,{{end}}
	}
}

func (h {{ .Name }}) ServeHTTP(w http.ResponseWriter, r *http.Request) {
	var body models.{{ .RequestBody }}
	json.NewDecoder(r.Body).Decode(&body)
	{{ with .Service}}
	{{ GetHandlerLogicMethodString . }}
	if err != nil {
		w.WriteHeader(http.StatusInternalServerError)
		w.Write([]byte(err.Error()))
		return
	}
	{{else}}
	response := fmt.Sprintf("Hit {{.Name}} with body: %v%", body)
	{{end}}
	b, _ := json.Marshal(response)
	w.Write(b)
}
