name: testservice
# Contains application configuration and environment variables
appConfig:
  AppName: testservice #required
  Host: localhost #required
  Port: 8080 #required
  EnvVar: hellothere

# Creates object models
models:
  - name: User
    fields:
      Id: string
      FirstName: string
      LastName: string
      Address: string
      Age: int
    ops:
      - create
      - read
      - update
      - delete

# Creates an HTTP handler
http:
  - handlerName: GetObjectHandler
    method: GET
    path: /api/handler/{id}
    requestBody: APIHandlerRequest
    responseBody: APIHandlerResponse
    service: ClassManager.GetClass

# A service is a container for business logic
services:
  - name: ObjectManager
    methods:
      - name: GetObject
        accepts:
          test: string
          another: int
          tryThis: bool
  - name: ClassManager
    methods:
      - name: GetClass
        # depends:
        #   - 
        accepts:
          id: string
          value: int
        returns: int # this will only return a single type and an error. Create a model to accommodate anything more than a single return value.

# Sets up a local database docker container for you and initial migration files according to a schema model
db:
  type: postgres # supported types are postgres, mongo, and mysql
  user: user
  password: password
  name: testservice
  schema:
    - tableName: MyTable
      model: MyTableModel